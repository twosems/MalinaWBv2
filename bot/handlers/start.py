from aiogram import Router, F
from aiogram.types import (
    Message,
    CallbackQuery,
    ReplyKeyboardMarkup,
    KeyboardButton,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
)
from datetime import datetime, timedelta

from bot.keyboards.main_menu import main_menu_keyboard

from storage.users import (
    get_user_access,
    create_user_access,
    set_trial_access,
    get_user_api_key
)
from bot.handlers.profile import profile_menu

router = Router()

def guest_menu() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å")]
        ],
        resize_keyboard=True,
        input_field_placeholder="–ù–∞–∂–º–∏—Ç–µ '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å', —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å"
    )

def access_menu_keyboard(trial_active=False, trial_expired=False, show_trial=True) -> InlineKeyboardMarkup:
    kb = []
    if show_trial:
        if not trial_active and not trial_expired:
            kb.append([InlineKeyboardButton(text="üïí –ü—Ä–æ–±–Ω—ã–π –¥–æ—Å—Ç—É–ø (1 —á–∞—Å)", callback_data="trial")])
        else:
            label = "üïí –ü—Ä–æ–±–Ω—ã–π –¥–æ—Å—Ç—É–ø (—É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω)" if trial_expired else "üïí –ü—Ä–æ–±–Ω—ã–π –¥–æ—Å—Ç—É–ø (–∞–∫—Ç–∏–≤–µ–Ω)"
            kb.append([InlineKeyboardButton(text=label, callback_data="trial_disabled")])
    kb.append([InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø 399‚ÇΩ/–º–µ—Å", callback_data="buy")])
    kb.append([InlineKeyboardButton(text="üÜò –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support")])
    kb.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_greeting")])
    return InlineKeyboardMarkup(inline_keyboard=kb)

def profile_menu_keyboard():
    # –í—Ä–µ–º–µ–Ω–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–û–ø–ª–∞—Ç–∏—Ç—å")],
            [KeyboardButton(text="–í–≤–µ—Å—Ç–∏ API")],
            [KeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥")],
        ],
        resize_keyboard=True
    )

@router.message(F.text == "/start")
async def cmd_start(message: Message):
    await message.answer(
        "ü§ñ <b>MalinaWB ‚Äî –≤–∞—à –ª–∏—á–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –Ω–∞ Wildberries!</b>\n\n"
        "üîπ <b>–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –æ—Ç—á—ë—Ç–æ–≤</b> ‚Äî –ø–æ–ª—É—á–∞–π—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –ª–∏—à–Ω–∏—Ö –¥–≤–∏–∂–µ–Ω–∏–π\n"
        "üîπ <b>–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</b> ‚Äî –≤—Å–µ–≥–¥–∞ –¥–µ—Ä–∂–∏—Ç–µ —Ä—É–∫—É –Ω–∞ –ø—É–ª—å—Å–µ –±–∏–∑–Ω–µ—Å–∞\n"
        "üîπ <b>–£–ø—Ä–æ—â–µ–Ω–∏–µ —Ä—É—Ç–∏–Ω—ã</b> ‚Äî —ç–∫–æ–Ω–æ–º—å—Ç–µ –≤—Ä–µ–º—è –Ω–∞ –≤–∞–∂–Ω–æ–º!\n\n"
        "–ù–∞–∂–º–∏—Ç–µ <b>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å</b>, —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –æ—Ç–∫—Ä—ã—Ç—å –¥–æ—Å—Ç—É–ø –∫ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º –±–æ—Ç–∞ üëá",
        reply_markup=guest_menu(),
        parse_mode="HTML"
    )

@router.message(F.text == "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å")
async def guest_continue(message: Message):
    user_id = message.from_user.id
    access = await get_user_access(user_id)
    now = datetime.now()
    if not access:
        await create_user_access(user_id)
        access = await get_user_access(user_id)
    if (
            access and (
            (access.paid_until and access.paid_until > now)
            or (access.trial_activated and access.trial_until and access.trial_until > now)
    )
    ):
        # –í–°–ï–ì–î–ê –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–≤–µ—Å—Ç–∏ API, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–∞ –µ—â—ë –Ω–µ –±—ã–ª–æ, –∏–ª–∏ api –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
        await profile_menu(message, use_main_menu=False, prompt_api_if_none=True)
        return

    trial_expired = access.trial_activated and access.trial_until and access.trial_until <= now
    trial_active = access.trial_activated and access.trial_until and access.trial_until > now
    show_trial = not access.trial_activated

    await message.answer(
        "üîí –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –Ω—É–∂–µ–Ω –¥–æ—Å—Ç—É–ø:\n"
        "‚Äî –ü—Ä–æ–±–Ω—ã–π 1 —á–∞—Å (–æ–¥–∏–Ω —Ä–∞–∑)\n"
        "‚Äî –ò–ª–∏ –∫—É–ø–∏—Ç—å –º–µ—Å—è—Ü –∑–∞ 399‚ÇΩ\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –Ω–∏–∂–µ:",
        reply_markup=access_menu_keyboard(trial_active, trial_expired, show_trial=show_trial)
    )

@router.message(F.text == "–û–ø–ª–∞—Ç–∏—Ç—å")
async def pay_from_profile(message: Message):
    user_id = message.from_user.id
    access = await get_user_access(user_id)
    now = datetime.now()
    trial_expired = access and access.trial_activated and access.trial_until and access.trial_until <= now
    trial_active = access and access.trial_activated and access.trial_until and access.trial_until > now
    await message.answer(
        "üí≥ –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –Ω—É–∂–µ–Ω –ø–ª–∞—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø:\n\n"
        "‚Äî –ö—É–ø–∏—Ç–µ –º–µ—Å—è—Ü –∑–∞ 399‚ÇΩ\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –Ω–∏–∂–µ:",
        reply_markup=access_menu_keyboard(trial_active, trial_expired, show_trial=False)
    )

@router.callback_query(F.data == "trial")
async def activate_trial(callback: CallbackQuery):
    user_id = callback.from_user.id
    now = datetime.now()
    await set_trial_access(user_id, now + timedelta(hours=1))
    await callback.message.delete()
    await callback.answer()
    # –í–°–ï–ì–î–ê –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤–≤–µ—Å—Ç–∏ API, —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ trial
    await profile_menu(callback.message, use_main_menu=False, prompt_api_if_none=True)

@router.callback_query(F.data == "buy")
async def buy_access(callback: CallbackQuery):
    await callback.answer("üí≥ –û–ø–ª–∞—Ç–∞ –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.\n–ü–æ–ø—Ä–æ—Å–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤—ã–¥–∞—Ç—å –¥–æ—Å—Ç—É–ø –≤—Ä—É—á–Ω—É—é.", show_alert=True)

@router.callback_query(F.data == "support")
async def support_access(callback: CallbackQuery):
    await callback.answer("üÜò –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞: @your_support_username", show_alert=True)

@router.callback_query(F.data == "trial_disabled")
async def trial_disabled(callback: CallbackQuery):
    await callback.answer("–ü—Ä–æ–±–Ω—ã–π –¥–æ—Å—Ç—É–ø —É–∂–µ –±—ã–ª –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.", show_alert=True)

@router.callback_query(F.data == "back_to_greeting")
async def back_to_greeting(callback: CallbackQuery):
    await callback.message.edit_text(
        "ü§ñ <b>MalinaWB ‚Äî –≤–∞—à –ª–∏—á–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –Ω–∞ Wildberries!</b>\n\n"
        "üîπ <b>–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –æ—Ç—á—ë—Ç–æ–≤</b> ‚Äî –ø–æ–ª—É—á–∞–π—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –±–µ–∑ –ª–∏—à–Ω–∏—Ö –¥–≤–∏–∂–µ–Ω–∏–π\n"
        "üîπ <b>–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</b> ‚Äî –≤—Å–µ–≥–¥–∞ –¥–µ—Ä–∂–∏—Ç–µ —Ä—É–∫—É –Ω–∞ –ø—É–ª—å—Å–µ –±–∏–∑–Ω–µ—Å–∞\n"
        "üîπ <b>–£–ø—Ä–æ—â–µ–Ω–∏–µ —Ä—É—Ç–∏–Ω—ã</b> ‚Äî —ç–∫–æ–Ω–æ–º—å—Ç–µ –≤—Ä–µ–º—è –Ω–∞ –≤–∞–∂–Ω–æ–º!\n\n"
        "–ù–∞–∂–º–∏—Ç–µ <b>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å</b>, —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –æ—Ç–∫—Ä—ã—Ç—å –¥–æ—Å—Ç—É–ø –∫ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º –±–æ—Ç–∞ üëá",
        reply_markup=guest_menu(),
        parse_mode="HTML"
    )
    await callback.answer()
