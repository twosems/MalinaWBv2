# bot/handlers/start.py

from aiogram import Router, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from datetime import datetime, timedelta

from storage.users import (
    get_user_access,
    create_user_access,
    set_trial_access
)

router = Router()

def main_menu_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìä –û—Ç—á—ë—Ç—ã")],
            [KeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å")],
        ],
        resize_keyboard=True
    )

def access_keyboard(trial_active, trial_expired):
    kb = []
    if not trial_active and not trial_expired:
        kb.append([InlineKeyboardButton(text="üïí –ü—Ä–æ–±–Ω—ã–π –¥–æ—Å—Ç—É–ø (1 —á–∞—Å)", callback_data="trial")])
    else:
        label = "üïí –ü—Ä–æ–±–Ω—ã–π –¥–æ—Å—Ç—É–ø (—É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω)" if trial_expired else "üïí –ü—Ä–æ–±–Ω—ã–π –¥–æ—Å—Ç—É–ø (–∞–∫—Ç–∏–≤–µ–Ω)"
        kb.append([InlineKeyboardButton(text=label, callback_data="trial_disabled")])
    kb.append([InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –¥–æ—Å—Ç—É–ø 399‚ÇΩ/–º–µ—Å", callback_data="buy")])
    return InlineKeyboardMarkup(inline_keyboard=kb)

@router.message(F.text == "/start")
async def cmd_start(message: Message):
    user_id = message.from_user.id
    now = datetime.now()

    # –ü–æ–ª—É—á–∏—Ç—å –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    access = await get_user_access(user_id)
    if not access:
        await create_user_access(user_id)
        access = await get_user_access(user_id)

    paid_until = access.paid_until
    trial_until = access.trial_until
    trial_activated = access.trial_activated
    trial_expired = False

    # –ï—Å—Ç—å –ø–ª–∞—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø?
    if paid_until and paid_until > now:
        await message.answer(
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –î–æ—Å—Ç—É–ø –æ–ø–ª–∞—á–µ–Ω –¥–æ " + paid_until.strftime("%d.%m.%Y %H:%M"),
            reply_markup=main_menu_keyboard()
        )
        return

    # –ü—Ä–æ–±–Ω—ã–π —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∏ –µ—â—ë –∞–∫—Ç–∏–≤–µ–Ω?
    if trial_activated and trial_until and trial_until > now:
        await message.answer(
            f"–ü—Ä–æ–±–Ω—ã–π –¥–æ—Å—Ç—É–ø –∞–∫—Ç–∏–≤–µ–Ω –¥–æ {trial_until.strftime('%H:%M')}\n–ü–ª–∞—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –Ω–∏–∂–µ.",
            reply_markup=access_keyboard(trial_active=True, trial_expired=False)
        )
        return

    # –ü—Ä–æ–±–Ω—ã–π –±—ã–ª, –Ω–æ –∏—Å—Ç—ë–∫
    if trial_activated and trial_until and trial_until <= now:
        trial_expired = True
        await message.answer(
            "–ü—Ä–æ–±–Ω—ã–π –¥–æ—Å—Ç—É–ø —É–∂–µ –±—ã–ª –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω.\n–ö—É–ø–∏—Ç–µ –¥–æ—Å—Ç—É–ø, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å:",
            reply_markup=access_keyboard(trial_active=False, trial_expired=True)
        )
        return

    # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –¥–æ—Å—Ç—É–ø–∞!
    await message.answer(
        "üîí –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –Ω—É–∂–µ–Ω –¥–æ—Å—Ç—É–ø:\n"
        "‚Äî –ü—Ä–æ–±–Ω—ã–π 1 —á–∞—Å (–æ–¥–∏–Ω —Ä–∞–∑)\n"
        "‚Äî –ò–ª–∏ –∫—É–ø–∏—Ç—å –º–µ—Å—è—Ü –∑–∞ 399‚ÇΩ",
        reply_markup=access_keyboard(trial_active=False, trial_expired=False)
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–æ–±–Ω—ã–π –¥–æ—Å—Ç—É–ø"
@router.callback_query(F.data == "trial")
async def activate_trial(callback):
    user_id = callback.from_user.id
    now = datetime.now()
    await set_trial_access(user_id, now + timedelta(hours=1))
    await callback.message.edit_text(
        "üïí –ü—Ä–æ–±–Ω—ã–π –¥–æ—Å—Ç—É–ø –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –Ω–∞ 1 —á–∞—Å!\n\n"
        "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º.\n"
        "–ï—Å–ª–∏ –Ω—É–∂–µ–Ω –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø ‚Äî –æ–ø–ª–∞—Ç–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É.",
        reply_markup=access_keyboard(trial_active=True, trial_expired=False)
    )
    await callback.answer()

# –ö–Ω–æ–ø–∫–∞ –æ–ø–ª–∞—Ç—ã
@router.callback_query(F.data == "buy")
async def buy_access(callback):
    await callback.message.edit_text(
        "üí≥ –û–ø–ª–∞—Ç–∞ –ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞.\n"
        "–ü–æ–ø—Ä–æ—Å–∏—Ç–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤—ã–¥–∞—Ç—å –¥–æ—Å—Ç—É–ø –≤—Ä—É—á–Ω—É—é.",
        reply_markup=access_keyboard(trial_active=True, trial_expired=True)
    )
    await callback.answer()

# –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–±–Ω–∏–∫ –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω
@router.callback_query(F.data == "trial_disabled")
async def trial_disabled(callback):
    await callback.answer("–ü—Ä–æ–±–Ω—ã–π –¥–æ—Å—Ç—É–ø —É–∂–µ –±—ã–ª –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.", show_alert=True)
