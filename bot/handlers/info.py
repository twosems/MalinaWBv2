from aiogram import Router, F
from aiogram.types import CallbackQuery
from bot.keyboards.keyboards import info_menu_inline_keyboard
from bot.utils.pagination import build_pagination_keyboard
from storage.warehouses import get_cached_warehouses_dicts

router = Router()
PER_PAGE = 10

@router.callback_query(F.data == "main_info")
async def info_menu(callback: CallbackQuery):
    text = (
        "‚ÑπÔ∏è <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ —Å–ø—Ä–∞–≤–∫–∞</b>\n\n"
        "üè¨ <b>–°–∫–ª–∞–¥—ã WB</b> ‚Äî –∫–µ—à –∞–¥—Ä–µ—Å–æ–≤ —Å–∫–ª–∞–¥–æ–≤, –±—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä—É—á–Ω—É—é\n"
        "üìù <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏</b> ‚Äî —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ, FAQ\n"
        "üìú <b>–û—Ñ–µ—Ä—Ç–∞</b> ‚Äî –ø—Ä–∞–≤–∏–ª–∞ –∏ —É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞\n"
        "üÜò <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞</b> ‚Äî –≤–æ–ø—Ä–æ—Å—ã, –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å, –ø–æ–º–æ—â—å\n\n"
        "<i>–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª:</i>"
    )
    await callback.message.edit_text(
        text,
        reply_markup=info_menu_inline_keyboard(),
        parse_mode="HTML"
    )

@router.callback_query(F.data.regexp(r"^info_warehouses(_page_)?(\d+)?$"))
async def info_warehouses(callback: CallbackQuery):
    import re
    m = re.match(r"^info_warehouses(?:_page_)?(\d+)?$", callback.data)
    page = int(m.group(1)) if m and m.group(1) else 1

    warehouses = await get_cached_warehouses_dicts()
    total = len(warehouses)
    pages = max(1, (total + PER_PAGE - 1) // PER_PAGE)
    start = (page - 1) * PER_PAGE
    end = start + PER_PAGE
    page_warehouses = warehouses[start:end]

    if not page_warehouses:
        text = "‚õîÔ∏è –ù–µ—Ç —Å–∫–ª–∞–¥–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è."
    else:
        text = f"üè¨ <b>–°–∫–ª–∞–¥—ã Wildberries</b>\n\n"
        for wh in page_warehouses:
            name = wh.get("name", "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è")
            address = wh.get("address", "") or ""
            status = "üü¢ –ê–∫—Ç–∏–≤–µ–Ω" if wh.get("isActive") else "üî¥ –ù–µ –∞–∫—Ç–∏–≤–µ–Ω"
            text += f"<b>{name}</b>\n"
            if address:
                text += f"üìç <i>{address}</i>\n"
            text += f"{status}\n\n"
        text += f"<b>–°—Ç—Ä–∞–Ω–∏—Ü–∞ {page} –∏–∑ {pages}</b>"

    kb = build_pagination_keyboard(
        total=total,
        page=page,
        per_page=PER_PAGE,
        prefix="info_warehouses_page_",
        back_callback="main_info"
    )

    await callback.message.edit_text(
        text,
        reply_markup=kb,
        parse_mode="HTML"
    )

# –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –º–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å:
# @router.callback_query(F.data == "info_instructions")
# @router.callback_query(F.data == "info_offer")
# @router.callback_query(F.data == "info_support")
