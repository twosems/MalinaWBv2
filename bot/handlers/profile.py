from aiogram import Router, F
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from bot.keyboards.keyboards import profile_keyboard
from storage.users import (
    get_user_access,
    set_user_api_key,
    get_user_api_key,
    remove_user_api_key,
    remove_user_account,
    get_user_profile_info,
    set_user_profile_info
)
from datetime import datetime
import aiohttp

router = Router()

class ProfileStates(StatesGroup):
    waiting_for_api_key = State()

def format_user_info(seller_name, trade_mark, balance, days_left, paid_until):
    MONTHS = [
        "—è–Ω–≤–∞—Ä—è", "—Ñ–µ–≤—Ä–∞–ª—è", "–º–∞—Ä—Ç–∞", "–∞–ø—Ä–µ–ª—è", "–º–∞—è", "–∏—é–Ω—è",
        "–∏—é–ª—è", "–∞–≤–≥—É—Å—Ç–∞", "—Å–µ–Ω—Ç—è–±—Ä—è", "–æ–∫—Ç—è–±—Ä—è", "–Ω–æ—è–±—Ä—è", "–¥–µ–∫–∞–±—Ä—è"
    ]
    date_str = f"{paid_until.day} {MONTHS[paid_until.month-1]} {paid_until.year}"
    return (
        f"üë§ <b>–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n"
        f"üõçÔ∏è <b>–ú–∞–≥–∞–∑–∏–Ω:</b> {seller_name or '‚Äî'}\n"
        f"üè∑Ô∏è <b>–ë—Ä–µ–Ω–¥:</b> {trade_mark or '‚Äî'}\n"
        f"\n"
        f"üí∞ <b>–ë–∞–ª–∞–Ω—Å:</b> <code>{balance}‚ÇΩ</code>\n"
        f"‚è≥ <b>–û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π:</b> <code>{days_left}</code>\n"
        f"üìÖ <b>–ü–æ–¥–ø–∏—Å–∫–∞ –¥–æ:</b> <code>{date_str}</code>\n"
    )

async def ask_for_api_key(message: Message, state: FSMContext):
    await message.answer(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π Wildberries API-–∫–ª—é—á –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.",
        reply_markup=ReplyKeyboardRemove()
    )
    await state.set_state(ProfileStates.waiting_for_api_key)

async def profile_menu(message: Message):
    user_id = message.from_user.id
    access = await get_user_access(user_id)
    api_key = await get_user_api_key(user_id)
    user_profile = await get_user_profile_info(user_id)
    now = datetime.now()
    days_left = max((access.paid_until - now).days, 0) if access and access.paid_until else 0
    balance = days_left * 13
    seller_name = user_profile.seller_name if user_profile else "‚Äî"
    trade_mark = user_profile.trade_mark if user_profile else "‚Äî"
    paid_until = access.paid_until if access and access.paid_until else now

    text = format_user_info(seller_name, trade_mark, balance, days_left, paid_until)
    await message.answer(text, parse_mode="HTML", reply_markup=profile_keyboard(bool(api_key)))

@router.message(ProfileStates.waiting_for_api_key)
async def save_api_key(message: Message, state: FSMContext):
    from bot.handlers.main_menu import main_menu
    user_id = message.from_user.id
    api_key = message.text.strip()
    url = 'https://common-api.wildberries.ru/api/v1/seller-info'
    headers = {'Authorization': api_key}
    async with aiohttp.ClientSession() as session:
        async with session.get(url, headers=headers) as resp:
            if resp.status == 200:
                data = await resp.json()
                seller_name = data.get('name', '‚Äî')
                trade_mark = data.get('tradeMark', '‚Äî')
                await set_user_api_key(user_id, api_key)
                await set_user_profile_info(user_id, seller_name, trade_mark)
                await message.answer(
                    "‚úÖ API-–∫–ª—é—á —Å–æ—Ö—Ä–∞–Ω—ë–Ω –∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω.\n\n–í—ã –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
                    reply_markup=ReplyKeyboardRemove()
                )
                await state.clear()
                await main_menu(message)
                return
            else:
                await message.answer(
                    "‚ùå –ö–ª—é—á –Ω–µ–≤–∞–ª–∏–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–æ–π –∫–ª—é—á –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ '–û—Ç–º–µ–Ω–∞'.",
                    reply_markup=profile_keyboard(False)
                )

@router.message(F.text == "–í–≤–µ—Å—Ç–∏ API")
async def ask_api_btn(message: Message, state: FSMContext):
    await ask_for_api_key(message, state)

@router.message(F.text == "–£–¥–∞–ª–∏—Ç—å API")
async def del_api(message: Message):
    user_id = message.from_user.id
    await remove_user_api_key(user_id)
    await set_user_profile_info(user_id, None, None)
    await message.answer("API-–∫–ª—é—á —É–¥–∞–ª—ë–Ω.")
    await profile_menu(message)

@router.message(F.text == "–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
async def del_account(message: Message):
    pro
    user_id = message.from_user.id
    await remove_user_account(user_id)
    await message.answer("–ê–∫–∫–∞—É–Ω—Ç —É–¥–∞–ª—ë–Ω. –î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start.")

@router.message(F.text == "‚¨ÖÔ∏è –ù–∞–∑–∞–¥")
async def profile_back(message: Message):
    from bot.handlers.main_menu import main_menu
    await main_menu(message)
