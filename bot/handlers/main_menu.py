from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove
from bot.keyboards.keyboards import main_menu_inline_keyboard
from storage.users import get_user_access, get_user_profile_info
from datetime import datetime

router = Router()

def format_user_info(seller_name, trade_mark, balance, days_left, paid_until):
    MONTHS = [
        "—è–Ω–≤–∞—Ä—è", "—Ñ–µ–≤—Ä–∞–ª—è", "–º–∞—Ä—Ç–∞", "–∞–ø—Ä–µ–ª—è", "–º–∞—è", "–∏—é–Ω—è",
        "–∏—é–ª—è", "–∞–≤–≥—É—Å—Ç–∞", "—Å–µ–Ω—Ç—è–±—Ä—è", "–æ–∫—Ç—è–±—Ä—è", "–Ω–æ—è–±—Ä—è", "–¥–µ–∫–∞–±—Ä—è"
    ]
    date_str = f"{paid_until.day} {MONTHS[paid_until.month-1]} {paid_until.year}"
    return (
        f"üë§ <b>–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n"
        f"üõçÔ∏è <b>–ú–∞–≥–∞–∑–∏–Ω:</b> {seller_name or '‚Äî'}\n"
        f"üè∑Ô∏è <b>–ë—Ä–µ–Ω–¥:</b> {trade_mark or '‚Äî'}\n"
        f"\n"
        f"üí∞ <b>–ë–∞–ª–∞–Ω—Å:</b> <code>{balance}‚ÇΩ</code>\n"
        f"‚è≥ <b>–û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π:</b> <code>{days_left}</code>\n"
        f"üìÖ <b>–ü–æ–¥–ø–∏—Å–∫–∞ –¥–æ:</b> <code>{date_str}</code>\n"
    )

async def main_menu(message: Message):
    user_id = message.from_user.id
    access = await get_user_access(user_id)
    user_profile = await get_user_profile_info(user_id)
    now = datetime.now()
    if not access or not access.paid_until:
        await message.answer("–ù–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∏! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start.", reply_markup=ReplyKeyboardRemove())
        return
    days_left = max((access.paid_until - now).days, 0)
    balance = days_left * 13
    seller_name = user_profile.seller_name if user_profile else "‚Äî"
    trade_mark = user_profile.trade_mark if user_profile else "‚Äî"

    text = format_user_info(seller_name, trade_mark, balance, days_left, access.paid_until)
    await message.answer(text, parse_mode="HTML", reply_markup=ReplyKeyboardRemove())
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:", reply_markup=main_menu_inline_keyboard())

@router.callback_query(F.data == "main_profile")
async def main_profile(callback: CallbackQuery):
    from bot.handlers.profile import profile_menu
    await callback.message.delete()
    await profile_menu(callback.message)

@router.callback_query(F.data == "main_reports")
async def reports_menu(callback: CallbackQuery):
    await callback.answer("–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–∞–∑–¥–µ–ª –æ—Ç—á—ë—Ç–æ–≤.", show_alert=True)

@router.callback_query(F.data == "main_analytics")
async def analytics_menu(callback: CallbackQuery):
    await callback.answer("–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–∞–∑–¥–µ–ª –∞–Ω–∞–ª–∏—Ç–∏–∫–∏.", show_alert=True)

@router.callback_query(F.data == "main_slots")
async def slots_menu(callback: CallbackQuery):
    await callback.answer("–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–∞–∑–¥–µ–ª —Å–ª–æ—Ç–æ–≤.", show_alert=True)

@router.callback_query(F.data == "main_support")
async def support_menu(callback: CallbackQuery):
    await callback.answer("–ó–¥–µ—Å—å –±—É–¥–µ—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∞.", show_alert=True)

@router.callback_query(F.data == "main_instructions")
async def instructions_menu(callback: CallbackQuery):
    await callback.answer("–ó–¥–µ—Å—å –±—É–¥—É—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏.", show_alert=True)
